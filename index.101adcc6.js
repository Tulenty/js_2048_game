const t=new class{constructor(t=null){this.board=t||this.generateEmptyBoard(),this.size=4,this.score=0,this.status="idle"}generateEmptyBoard(){return Array.from({length:4},()=>[,,,,].fill(0))}addRandomTile(){let t=[];for(let e=0;e<4;e++)for(let r=0;r<4;r++)0===this.board[e][r]&&t.push([e,r]);if(t.length>0){let[e,r]=t[Math.floor(Math.random()*t.length)];this.board[e][r]=.9>Math.random()?2:4}}moveLeft(){if("playing"!==this.status)return;let t=!1;for(let e=0;e<4;e++){let r=this.board[e].filter(t=>0!==t);for(let t=0;t<r.length-1;t++)r[t]===r[t+1]&&(r[t]*=2,this.score+=r[t],r.splice(t+1,1),r.push(0));for(;r.length<4;)r.push(0);JSON.stringify(r)!==JSON.stringify(this.board[e])&&(t=!0),this.board[e]=r}t&&this.addRandomTile(),this.checkGameOver()}moveRight(){if("playing"!==this.status)return;let t=!1;for(let e=0;e<4;e++){let r=this.board[e].filter(t=>0!==t);for(let t=r.length-1;t>0;t--)r[t]===r[t-1]&&(r[t]*=2,this.score+=r[t],r.splice(t-1,1),r.unshift(0));for(;r.length<4;)r.unshift(0);JSON.stringify(r)!==JSON.stringify(this.board[e])&&(t=!0),this.board[e]=r}t&&this.addRandomTile(),this.checkGameOver()}moveUp(){if("playing"!==this.status)return;let t=!1,e=JSON.parse(JSON.stringify(this.board));for(let r=0;r<4;r++){let s=[];for(let t=0;t<4;t++)0!==this.board[t][r]&&s.push(this.board[t][r]);for(let t=0;t<s.length-1;t++)s[t]===s[t+1]&&(s[t]*=2,this.score+=s[t],s.splice(t+1,1));for(;s.length<4;)s.push(0);JSON.stringify(this.board)!==JSON.stringify(e)&&(t=!0);for(let t=0;t<4;t++)this.board[t][r]=s[t]}t&&this.addRandomTile(),this.checkGameOver()}moveDown(){if("playing"!==this.status)return;let t=!1;for(let e=0;e<4;e++){let r=[];for(let t=0;t<4;t++)0!==this.board[t][e]&&r.push(this.board[t][e]);for(let t=r.length-1;t>0;t--)r[t]===r[t-1]&&(r[t]*=2,this.score+=r[t],r.splice(t-1,1),r.unshift(0));for(;r.length<4;)r.unshift(0);for(let s=0;s<4;s++)this.board[s][e]!==r[s]&&(t=!0),this.board[s][e]=r[s]}t&&this.addRandomTile(),this.checkGameOver()}getScore(){return this.score}getState(){return this.board}checkGameOver(){this.isWin()?this.status="win":this.isLose()&&(this.status="lose")}isWin(){for(let t of this.board)if(t.includes(2048))return!0;return!1}isLose(){for(let t=0;t<4;t++)for(let e=0;e<4;e++)if(0===this.board[t][e]||e<3&&this.board[t][e]===this.board[t][e+1]||t<3&&this.board[t][e]===this.board[t+1][e])return!1;return!0}getStatus(){return this.status}start(){"idle"===this.status&&(this.status="playing",this.addRandomTile(),this.addRandomTile())}restart(){this.score=0,this.status="idle",this.board=this.generateEmptyBoard()}},e=document.querySelector(".start"),r=document.querySelector(".game-score");function s(){let e=document.querySelectorAll(".field-cell"),i=t.getState();for(let r=0;r<i.length;r++)for(let s=0;s<i[r].length;s++){let o=e[r*t.size+s];o.textContent=i[r][s]||"",o.className=`field-cell field-cell--${i[r][s]||"empty"}`}r.textContent=t.getScore(),t.isWin()?(alert("WIN!"),t.restart(),s()):t.isLose()&&(alert("LOSE!"),t.restart(),s())}e.addEventListener("click",()=>{"playing"===t.getStatus()?(t.restart(),e.textContent="start"):"idle"===t.getStatus()&&(t.start(),e.textContent="restart"),s()}),document.addEventListener("keydown",e=>{"ArrowLeft"===e.key&&t.moveLeft(),"ArrowRight"===e.key&&t.moveRight(),"ArrowUp"===e.key&&t.moveUp(),"ArrowDown"===e.key&&t.moveDown(),s()});
//# sourceMappingURL=index.101adcc6.js.map
